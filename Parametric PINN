import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Define the PINN model
def create_pinn_model():
    model = Sequential([
        Dense(10, input_dim=1, activation='tanh'),
        Dense(10, activation='tanh'),
        Dense(1, activation='linear')
    ])
    return model

pinn_model = create_pinn_model()

# Compile the model
pinn_model.compile(optimizer='adam', loss='mse')

# Prepare the data
X_train = time_points.reshape(-1, 1)
y_train = np.array(queue_lengths).reshape(-1, 1)

# Train the PINN
pinn_model.fit(X_train, y_train, epochs=1000, batch_size=32, verbose=0)

# Predict the queue lengths using the trained PINN
queue_lengths_pinn = pinn_model.predict(X_train).flatten()

# Plotting the true and PINN predicted queue lengths
plt.figure(figsize=(12, 6))
plt.plot(time_points, queue_lengths, label='True Queue Length')
plt.plot(time_points, queue_lengths_pinn, label='Estimated Queue Length (PINN)', linestyle='--')
plt.xlabel('Time (seconds)')
plt.ylabel('Queue Length')
plt.title('Queue Length: True vs Estimated using PINN')
plt.legend()
plt.grid(True)
plt.show()
